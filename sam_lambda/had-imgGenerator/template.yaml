AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  had-imgGenerator

  SAM Template for generating images using AWS Bedrock.

Parameters:
  BucketName:
    Type: String
    Description: "Name of the S3 bucket to store generated images"

Globals:
  Function:
    Timeout: 30 # Increased timeout for Bedrock model to generate the image
    MemorySize: 512 # Increased memory to handle image processing tasks

Resources:
  GenerateImageFunction: 
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/ # Point to the folder where the Lambda code is located
      Handler: app.lambda_handler 
      Runtime: python3.9
      Environment:
        Variables:
          BUCKET_NAME: !Ref BucketName # Referencing the BucketName parameter
          CANDIDATE_NR: "104" # Candidate number to prefix the images
      Architectures:
        - x86_64
      Policies:
        - S3WritePolicy:
            BucketName: !Ref BucketName 
        - AWSLambdaBasicExecutionRole
      Events:
        GenerateImageAPI: 
          Type: Api
          Properties:
            Path: /generate # Set the API path to /generate 
            Method: post

Outputs:
  GenerateImageApi:
    Description: "API Gateway endpoint URL for Generate Image function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate"
  GenerateImageFunctionArn:
    Description: "Generate Image Lambda Function ARN"
    Value: !GetAtt GenerateImageFunction.Arn
  GenerateImageFunctionIamRole:
    Description: "IAM Role ARN for Generate Image function"
    Value: !GetAtt GenerateImageFunctionRole.Arn